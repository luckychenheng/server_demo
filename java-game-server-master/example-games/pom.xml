<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.menacheri</groupId>
	<artifactId>example-games</artifactId>
	<packaging>jar</packaging>
	<version>0.1</version>
	<name>example-games</name>
	<url>http://maven.apache.org</url>
	<description>This project holds some example multiplayer games that uses the jetserver library. The server part is in src/main/java and the client part of the game is in src/test/java</description>

	<!-- Shared version number properties -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>

		<!-- jet server dependency -->
		<dependency>
			<groupId>org.menacheri</groupId>
			<artifactId>jetserver</artifactId>
			<version>0.1</version>
			<type>jar</type>
		</dependency>
		
		<!-- jet client dependency -->
		<dependency>
			<groupId>org.menacheri</groupId>
			<artifactId>jetclient</artifactId>
			<version>0.1</version>
			<type>jar</type>
		</dependency>
		
		<!-- SLF4J to LOG4J dependency -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<!-- Uncomment for aspectj support -->
					<!-- <ajdtVersion>1.6</ajdtVersion>  -->
					<additionalProjectnatures>
						<!-- Uncomment for aspectj support -->
						<!-- <projectnature>org.eclipse.ajdt.ui.ajnature</projectnature> -->
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
						<projectnature>org.eclipse.wst.common.project.facet.core.nature</projectnature>
					</additionalProjectnatures>
					<!-- Uncomment for aspectj support -->
					<!-- Source includes is necessary to allow aspectj files in the java 
						folder, else eclipse will throw a filtering exception 
					<sourceIncludes>
						<sourceInclude>**/*.aj</sourceInclude>
					</sourceIncludes>
					-->
					<!-- Download sources will make maven download and attach source files 
						where available -->
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<compilerVersion>1.6</compilerVersion>
				</configuration>
			</plugin>
			<!-- 
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.4</version>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>1.6.1</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>1.6.1</version>
					</dependency>
					<dependency>
						<groupId>org.menacheri</groupId>
						<artifactId>jetserver</artifactId>
						<version>0.1</version>
					</dependency>
				</dependencies>
				<configuration>
					<source>1.6</source>
					<complianceLevel>1.6</complianceLevel>
					<verbose>true</verbose>
					<showWeaveInfo>true</showWeaveInfo>
					<target>1.6</target>
					// The following sets up aspectj weaving path. jetserver jar has the 
					//compiled aspect which is used to weave classes in this app '
					<aspectLibraries>
						<aspectLibrary>
							<groupId>org.menacheri</groupId>
							<artifactId>jetserver</artifactId>
						</aspectLibrary>
					</aspectLibraries>

				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			 -->

		</plugins>
	</build>

</project>
