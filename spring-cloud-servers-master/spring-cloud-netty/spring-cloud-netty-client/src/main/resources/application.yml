spring:
    application:
        name: spring-cloud-netty-client
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: non_null
    sleuth:
      enabled: true
      http:
        legacy:
          enabled: true
    cloud:
      consul:
        enabled: true
        host: 127.0.0.1
        port: 8500
        discovery:
          healthCheckPath: /actuator/health
          healthCheckInterval: 5s
          instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
          register: true
          enabled: true

server:
    port: 8885 #启动端口

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

eureka:
    instance:
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        # docker 部署开启
        prefer-ip-address: true
        ip-address: 127.0.0.1
    client:
        serviceUrl:
#            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8880}/eureka/


logging:
    level:
#        tk.mybatis: DEBUG
        com.github.wxiaoqi.security.auth: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false

auth:
  serviceId: spring-cloud-auth
  user:
    token-header: Authorization
    pub-key:
      path: jwt/pub.key
  client:
    token-header: client-token
    id: spring-cloud-moudle-rpc  #不填则默认读取spring.application.name
    secret: 123456
    pub-key:
      path: client/pub.key
    ratelimit:
      resubmit:
        limit-count: 1
        refresh-interval: 3000

jwt:
  token-header: Authorization
  pc:
    expire: 2592000
  app:
    expire: 2592000
  pri-key:
    path: jwt/pri.key
  pub-key:
    path: jwt/pub.key
