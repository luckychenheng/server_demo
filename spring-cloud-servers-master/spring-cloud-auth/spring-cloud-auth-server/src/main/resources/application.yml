spring:
    application:
        name: spring-cloud-auth
    jackson:
        date-format: yyyy-MM-dd HH:mm:ss
        time-zone: GMT+8
        default-property-inclusion: non_null
    redis:
        database: 2
        host: ${REDIS_HOST:localhost}
        port: ${REDIS_PORT:6379}
        pool:
        max-active: 20
    datasource:
      name: test
      url: jdbc:mysql://${MYSQL_HOST:47.98.179.77}:${MYSQL_PORT:3306}/ag_auth_v1?useUnicode=true&characterEncoding=UTF8
      username: root
      password: root
      # 使用druid数据源
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      filters: stat
      maxActive: 20
      initialSize: 1
      maxWait: 60000
      minIdle: 1
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxOpenPreparedStatements: 20
    rabbitmq:
      host: ${RABBIT_MQ_HOST:47.98.179.77}
      port:  ${RABBIT_MQ_PORT:5672}
      username: admin
      password: admin
    sleuth:
      enabled: true
      http:
        legacy:
          enabled: true
    cloud:
      consul:
        enabled: true
        host: 127.0.0.1
        port: 8500
        discovery:
          healthCheckPath: /actuator/health
          healthCheckInterval: 5s
          instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
          register: true
          enabled: true

server:
    port: 8881 #启动端口

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

eureka:
    instance:
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        # docker 部署开启
        prefer-ip-address: true
        ip-address: 127.0.0.1
    client:
        serviceUrl:
#            defaultZone: http://localhost:8761/eureka/
                    # docker 部署开启
            defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8880}/eureka/



jwt:
  token-header: Authorization
  expire: 14400
  pri-key:
    path: jwt/pri.key
  pub-key:
    path: jwt/pub.key
#  rsa-secret: xx1WET12^%3^(WE45

client:
  id: spring-cloud-auth
  secret: 123456
  token-header: client-token
  expire: 14400
  pri-key:
    path: client/pri.key
  pub-key:
    path: client/pub.key
#  rsa-secret: x2318^^(*WRYQWR(QW&T

logging:
    level:
#        tk.mybatis: DEBUG
        com.github.wxiaoqi.security.auth: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: '*'
  security:
    enabled: false
